<svg xmlns="http://www.w3.org/2000/svg" width="1000" height="512" viewBox="0 0 1000 512">
<rect x="0" y="0" width="1000" height="512" fill="#ffffff" stroke="#e5e7eb" />
<text x="20" y="36" font-family="monospace" font-size="16" font-weight="bold" fill="#111827">Stage Creation &amp; FD Ownership (generic)</text>
<text x="20" y="56" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#111827">Mapping (indices → roles):</tspan>
</text>
<text x="20" y="78" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#1d4ed8">  P0: Generator (writes 2..280)</tspan>
</text>
<text x="20" y="100" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#047857">  P1: Stage[1] — discovers prime 2</tspan>
</text>
<text x="20" y="122" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#047857">  P2: Stage[2] — discovers prime 3</tspan>
</text>
<text x="20" y="144" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#047857">  P3: Stage[3] — discovers prime 5</tspan>
</text>
<text x="20" y="166" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#111827">  … and so on</tspan>
</text>
<text x="20" y="188" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#111827"></tspan>
</text>
<text x="20" y="210" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#92400e">Before fork() (in Pi):</tspan>
</text>
<text x="20" y="232" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#374151">  owns:  Li.r          Ri.r  Ri.w</tspan>
</text>
<text x="20" y="254" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#374151">         (left/read)   (new) (new)</tspan>
</text>
<text x="20" y="276" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#111827"></tspan>
</text>
<text x="20" y="298" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#92400e">After fork():</tspan>
</text>
<text x="20" y="320" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#111827">  Parent  Pi (filter for p_i):        Child  P(i+1) (next stage):</tspan>
</text>
<text x="20" y="342" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#111827">    keep:  Li.r, Ri.w                    keep:  Ri.r</tspan>
</text>
<text x="20" y="364" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#111827">    close: Ri.r                          close: Li.r, Ri.w</tspan>
</text>
<text x="20" y="386" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#111827">    do:    read Li.r; if x%p_i!=0 → Ri.w  do:   primes(Ri.r)  // tail call</tspan>
</text>
<text x="20" y="408" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#111827"></tspan>
</text>
<text x="20" y="430" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#92400e">On upstream EOF in Pi:</tspan>
</text>
<text x="20" y="452" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#b91c1c">  close(Li.r); close(Ri.w)  → EOF to P(i+1)</tspan>
</text>
<text x="20" y="474" font-family="monospace" font-size="14">
<tspan x="20" dy="0" fill="#92400e">  wait(0); exit(0)</tspan>
</text>
</svg>